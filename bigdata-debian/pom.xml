<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.blazegraph</groupId>
    <artifactId>blazegraph-parent</artifactId>
    <version>1.5.3-GeoSpatial-SNAPSHOT-BLZG_1269_client-BLZG-1370</version>
    <relativePath>../blazegraph-parent/pom.xml</relativePath>
  </parent>
  <groupId>com.blazegraph</groupId>
  <artifactId>bigdata-jar</artifactId>
  <version>${bigdata.version}</version>
  <name>Blazegraph Executable Jar</name>
  <url>http://maven.apache.org</url>
  <packaging>jar</packaging>
  <properties>
     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  <build>
     <resources>
        <resource>
            <directory>../bigdata-war/src/main/resources</directory>
            <includes>
		<include>**/RWStore.properties</include>
	    </includes>
	</resource>
        <resource>
            <directory>src/main/resources</directory>
            <includes>
		<include>**/*.properties</include>
		<include>**/org.openrdf.rio.*</include>
	    </includes>
	</resource>
    </resources>
    <plugins>
      <!-- Create the debian file -->
      <plugin>
        <artifactId>jdeb</artifactId>
        <groupId>org.vafer</groupId>
        <version>1.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <configuration>
              <deb>${project.build.directory}/${artifactId}-${version}.deb</deb>
              <dataSet>
                <data>
                  <src>${project.build.directory}/${project.build.finalName}.jar</src>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/blazegraph-${version}/lib</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                  </mapper>
                </data>

                <!-- dependencies go in /usr/local/blazegraph-[version]/lib -->
                <data>
                  <src>${project.build.directory}/dependency</src>
                  <type>directory</type>
                  <includes>*.jar</includes>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/blazegraph-${version}/lib</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                  </mapper>
                </data>

                <!-- resources -->
                <data>
                  <src>${basedir}/src/main/resources</src>
                  <type>directory</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/blazegraph-${version}/resources</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                  </mapper>
                </data>

                <!-- shell scripts go in /usr/local/blazegraph-[version] -->
                <data>
                  <src>${basedir}</src>
                  <type>directory</type>
                  <includes>*.sh</includes>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/blazegraph-${version}</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                    <filemode>744</filemode>
                  </mapper>
                </data>

                <!-- soft link to versioned software -->
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>/usr/local/blazegraph</linkName>
                  <linkTarget>/usr/local/blazegraph-${version}</linkTarget>
                </data>

                <!-- create the data directories, log directories -->
                <data>
                  <type>template</type>
                  <paths>
                    <path>var/log/blazegraph</path>
                    <path>var/lib/blazegraph</path>
                  </paths>
                  <mapper>
                    <type>perm</type>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                  </mapper>
                </data>

                <!-- ingest (replay) logs -->
                <data>
                  <src>${basedir}/data/deploy</src>
                  <type>directory</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/var/lib/blazegraph/ingest</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                  </mapper>
                </data>

                <!-- properties files -->
                <data>
                  <src>${basedir}/docker.properties</src>
                  <dst>local.properties</dst>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/blazegraph</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                  </mapper>
                </data>

                <!-- logging properties files -->
                <data>
                  <src>${basedir}/log4j-docker.properties</src>
                  <dst>log4j.properties</dst>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/blazegraph</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                  </mapper>
                </data>

                <!-- upstart script -->
                <data>
                  <src>${basedir}/src/deb/init/blazegraph.conf</src>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/init</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.userGroup}</group>
                  </mapper>
                </data>

              </dataSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/classes/bigdata-war/src</outputDirectory>
              <resources>          
                <resource>
                  <directory>../bigdata-war/src</directory>
		  <includes>
			<include>**/*</include>
		  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
<!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
                 <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                 </descriptorRefs>
             <archive>
            <manifest>
                <mainClass>com.bigdata.rdf.sail.webapp.StandaloneNanoSparqlServer</mainClass>
            </manifest>
             </archive>
        </configuration>
        <executions>
             <execution>
                    <id>make-assembly</id>
                    <phase>package</phase>
                    <goals>
                      <goal>single</goal>
                    </goals>
             </execution>
        </executions>
    </plugin>
-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
               <filters>
                <filter>
                  <artifact>*:*</artifact>
		  <!--
		  <includes>
		    <include>bigdata-war/**</include>
		    <include>META-INFO/service/**</include>
		  </includes>
		  -->
                  <excludes>
                    <exclude>org/junit/experimental/**</exclude>
                    <exclude>org/junit/runners/**</exclude>
                    <exclude>junit/framework/**</exclude>
                    <exclude>junit/**</exclude>
                    <exclude>license/**</exclude>
                    <exclude>META-INF/license/**</exclude>
                    <exclude>org/junit/**</exclude>
                    <exclude>WEB-INF/**</exclude>
                    <exclude>test*/**</exclude>
                    <exclude>cia-factbook/**</exclude>
                    <exclude>**/*.ttl</exclude>
                    <exclude>**/*.ttlx</exclude>
                    <exclude>**/*.rq</exclude>
                    <exclude>**/*.srx</exclude>
                    <exclude>**/*.trig</exclude>
                  </excludes>
                </filter>
               </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>com.bigdata.rdf.sail.webapp.StandaloneNanoSparqlServer</Main-Class>
                    <Build-Number>${bigdata.version}</Build-Number>
                  </manifestEntries>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
     </plugins>
   </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>
          <show>public</show>
          <maxmemory>1000m</maxmemory>
          <author>true</author>
	  <version>true</version>
          <doctitle><![CDATA[<h1>Blazegraph Executable Jar</h1>]]></doctitle>
          <bottom> <![CDATA[<i>Copyright &#169; 2006-2015 SYSTAP, LLC. All Rights Reserved.</i>
<script>
jQuery(document).ready(function(){
  jQuery('ul.sf-menu').superfish({
  pathClass: 'current',
  cssArrows: false
  });
});

(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-50971023-6', 'blazegraph.com');
ga('send', 'pageview');
</script>
]]></bottom>
 
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  
  <dependencies>
    <dependency>
      <groupId>com.blazegraph</groupId>
      <artifactId>bigdata-core</artifactId>
      <version>${bigdata.version}</version>
    </dependency>
    <dependency>
      <groupId>com.blazegraph</groupId>
      <artifactId>bigdata-blueprints</artifactId>
      <version>${bigdata.version}</version>
    </dependency>
  </dependencies>

  </project>
