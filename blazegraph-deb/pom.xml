<?xml version="1.0"?>
<!--
Copyright (C) SYSTAP, LLC 2006-2015.  All rights reserved.

Contact:
     SYSTAP, LLC
     2501 Calvert ST NW #106
     Washington, DC 20008
     licenses@systap.com

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 2 of the License.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

Copyright 2010 by TalkingTrends (Amsterdam, The Netherlands)
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.blazegraph</groupId>
    <artifactId>blazegraph-parent</artifactId>
    <version>1.6.0-master-SNAPSHOT</version>
    <relativePath>../blazegraph-parent/pom.xml</relativePath>
  </parent>
  <groupId>com.blazegraph</groupId>
  <artifactId>blazegraph-deb</artifactId>
  <version>1.6.0-master-SNAPSHOT</version>
  <name>Blazegraph Debian Package</name>
  <url>http://maven.apache.org</url>
  <packaging>deb</packaging>

  <properties>
     <debian.user>blzg</debian.user>
     <debian.group>blzg</debian.group>
  </properties>

  <build>
    <extensions>
      <!-- Add support for the "deb" packaging -->
      <extension>
        <groupId>org.vafer</groupId>
        <artifactId>jdeb</artifactId>
        <version>1.4</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>jdeb</artifactId>
          <groupId>org.vafer</groupId>
          <!-- Customize deb package 
          <configuration>
            <dataSet>
              <data>
                <src>${project.build.directory}/preparedfiles</src>
                <type>directory</type>
                <mapper>
                  <type>perm</type>
                  <prefix>/usr/lib/xwiki/myproject</prefix>
                </mapper>
              </data>
            </dataSet>
          </configuration>
	   -->
        </plugin>
      </plugins>
     </pluginManagement>
     <resources>
        <resource>
            <directory>src/main/resources</directory>
            <includes>
		<include>**/*.xml</include>
		<include>**/*.properties</include>
		<include>**/org.openrdf.rio.*</include>
		<include>**/com.bigdata.*</include>
	    </includes>
	</resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>compile</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.blazegraph</groupId>
                  <artifactId>bigdata-war-html</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/classes/war</outputDirectory>
                  <destFileName>bigdata.war</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
        </plugin>
       <plugin>
           <artifactId>maven-antrun-plugin</artifactId>
           <version>1.6</version>
           <executions>
             <execution>
               <id>unpack-war</id>
               <goals>
                 <goal>run</goal>
               </goals>
               <phase>compile</phase>
               <configuration>
                 <target>
 		   <unzip dest="target/classes/war">
        		<fileset dir="target/classes/war">
            			<include name="bigdata.war" />
        		</fileset>    
    		   </unzip>
		   <copy file="target/classes/war/WEB-INF/RWStore.properties" todir="target/classes" />
                 </target>
               </configuration>
             </execution>
           </executions>
	</plugin>
      <!-- Create the debian file -->
      <plugin>
        <artifactId>jdeb</artifactId>
        <groupId>org.vafer</groupId>
        <version>1.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <configuration>
              <deb>${project.build.directory}/${artifactId}-${project.version}.deb</deb>
              <dataSet>
                <!-- dependencies go in /usr/local/blazegraph-[version]/lib -->
                <data>
                  <src>${project.build.directory}/dependency</src>
                  <type>directory</type>
                  <includes>*.jar</includes>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/blazegraph-${project.version}/lib</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.group}</group>
                  </mapper>
                </data>

		<!-- copy the war files to the install war sub directory -->
                <data>
                  <src>${project.build.directory}/classes/war/bigdata.war</src>
                  <type>file</type>
                  <dst>blazegraph.war</dst>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/blazegraph-${project.version}/war/</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.group}</group>
                  </mapper>
                </data>

                <!-- resources 
                <data>
                  <src>${basedir}/src/main/resources</src>
                  <type>directory</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/blazegraph-${project.version}/resources</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.group}</group>
                  </mapper>
                </data>-->

                <!-- shell scripts go in /usr/local/blazegraph-[version] -->
                <data>
                  <src>${basedir}</src>
                  <type>directory</type>
                  <includes>*.sh</includes>
                  <mapper>
                    <type>perm</type>
                    <prefix>/usr/local/blazegraph-${project.version}</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.group}</group>
                    <filemode>744</filemode>
                  </mapper>
                </data>

                <!-- soft link to versioned software -->
                <data>
                  <type>link</type>
                  <symlink>true</symlink>
                  <linkName>/usr/local/blazegraph</linkName>
                  <linkTarget>/usr/local/blazegraph-${project.version}</linkTarget>
                </data>

                <!-- create the data directories, log directories -->
                <data>
                  <type>template</type>
                  <paths>
                    <path>var/log/blazegraph</path>
                    <path>var/lib/blazegraph</path>
                  </paths>
                  <mapper>
                    <type>perm</type>
                    <user>${debian.user}</user>
                    <group>${debian.group}</group>
                  </mapper>
                </data>

                <data>
                      <src>${project.basedir}/src/deb/init.d</src>
                      <type>directory</type>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/init.d</prefix>
                        <filemode>755</filemode>
                        <user>${debian.user}</user>
                        <group>${debian.group}</group>
                      </mapper>
                </data>

                <data>
                      <src>${project.basedir}/src/deb/conf</src>
                      <type>directory</type>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/blazegraph</prefix>
                        <filemode>755</filemode>
                        <user>${debian.user}</user>
                        <group>${debian.group}</group>
                      </mapper>
                </data>

                <!-- Baseline RWStore.properties -->
                <data>
                  <src>${project.build.directory}/classes/RWStore.properties</src>
                  <dst>RWStore.properties</dst>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/blazegraph</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.group}</group>
                  </mapper>
                </data>

                <!-- logging properties files -->
                <data>
                  <src>${project.build.directory}/classes/war/WEB-INF/classes/log4j.properties</src>
                  <dst>log4j.properties</dst>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/blazegraph</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.group}</group>
                  </mapper>
                </data>

                <!-- upstart script
                <data>
                  <src>${basedir}/src/deb/init/blazegraph.conf</src>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/etc/init</prefix>
                    <user>${debian.user}</user>
                    <group>${debian.group}</group>
                  </mapper>
                </data> -->

              </dataSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
     </plugins>
   </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>
          <show>public</show>
          <maxmemory>1000m</maxmemory>
          <author>true</author>
	  <version>true</version>
          <doctitle><![CDATA[<h1>Blazegraph Executable Jar</h1>]]></doctitle>
          <bottom> <![CDATA[<i>Copyright &#169; 2006-2015 SYSTAP, LLC. All Rights Reserved.</i>
<script>
jQuery(document).ready(function(){
  jQuery('ul.sf-menu').superfish({
  pathClass: 'current',
  cssArrows: false
  });
});

(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-50971023-6', 'blazegraph.com');
ga('send', 'pageview');
</script>
]]></bottom>
 
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  
  <dependencies>
    <dependency>
      <groupId>com.blazegraph</groupId>
      <artifactId>rdf-properties</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.blazegraph</groupId>
      <artifactId>bigdata-core</artifactId>
      <version>${project.version}</version>
       <exclusions>
        <exclusion>
          <groupId>org.openrdf.sesame</groupId>
          <artifactId>sesame-rio-testsuite</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.openrdf.sesame</groupId>
          <artifactId>sesame-sparql-testsuite</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.openrdf.sesame</groupId>
          <artifactId>sesame-store-testsuite</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.blazegraph</groupId>
      <artifactId>bigdata-blueprints</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.blazegraph</groupId>
          <artifactId>junit-ext</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.blazegraph</groupId>
          <artifactId>bigdata-war-html</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.blazegraph</groupId>
      <artifactId>bigdata-client</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
  </project>
